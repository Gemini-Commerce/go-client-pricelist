/*
PriceList Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricelist

import (
	"encoding/json"
)

// checks if the PricelistChannelFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PricelistChannelFilter{}

// PricelistChannelFilter struct for PricelistChannelFilter
type PricelistChannelFilter struct {
	Channels             []string                  `json:"channels,omitempty"`
	Condition            *PricelistFilterCondition `json:"condition,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PricelistChannelFilter PricelistChannelFilter

// NewPricelistChannelFilter instantiates a new PricelistChannelFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPricelistChannelFilter() *PricelistChannelFilter {
	this := PricelistChannelFilter{}
	var condition PricelistFilterCondition = PRICELISTFILTERCONDITION_IN
	this.Condition = &condition
	return &this
}

// NewPricelistChannelFilterWithDefaults instantiates a new PricelistChannelFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPricelistChannelFilterWithDefaults() *PricelistChannelFilter {
	this := PricelistChannelFilter{}
	var condition PricelistFilterCondition = PRICELISTFILTERCONDITION_IN
	this.Condition = &condition
	return &this
}

// GetChannels returns the Channels field value if set, zero value otherwise.
func (o *PricelistChannelFilter) GetChannels() []string {
	if o == nil || IsNil(o.Channels) {
		var ret []string
		return ret
	}
	return o.Channels
}

// GetChannelsOk returns a tuple with the Channels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistChannelFilter) GetChannelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Channels) {
		return nil, false
	}
	return o.Channels, true
}

// HasChannels returns a boolean if a field has been set.
func (o *PricelistChannelFilter) HasChannels() bool {
	if o != nil && !IsNil(o.Channels) {
		return true
	}

	return false
}

// SetChannels gets a reference to the given []string and assigns it to the Channels field.
func (o *PricelistChannelFilter) SetChannels(v []string) {
	o.Channels = v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *PricelistChannelFilter) GetCondition() PricelistFilterCondition {
	if o == nil || IsNil(o.Condition) {
		var ret PricelistFilterCondition
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistChannelFilter) GetConditionOk() (*PricelistFilterCondition, bool) {
	if o == nil || IsNil(o.Condition) {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *PricelistChannelFilter) HasCondition() bool {
	if o != nil && !IsNil(o.Condition) {
		return true
	}

	return false
}

// SetCondition gets a reference to the given PricelistFilterCondition and assigns it to the Condition field.
func (o *PricelistChannelFilter) SetCondition(v PricelistFilterCondition) {
	o.Condition = &v
}

func (o PricelistChannelFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PricelistChannelFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Channels) {
		toSerialize["channels"] = o.Channels
	}
	if !IsNil(o.Condition) {
		toSerialize["condition"] = o.Condition
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PricelistChannelFilter) UnmarshalJSON(data []byte) (err error) {
	varPricelistChannelFilter := _PricelistChannelFilter{}

	err = json.Unmarshal(data, &varPricelistChannelFilter)

	if err != nil {
		return err
	}

	*o = PricelistChannelFilter(varPricelistChannelFilter)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "channels")
		delete(additionalProperties, "condition")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PricelistChannelFilter) GetValue() interface{} {
	if o == nil || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}

// SetValue populates the value of well-known types
func (o *PricelistChannelFilter) SetValue(value interface{}) {
	if o == nil || IsNil(value) {
		return
	}
	if IsNil(o.AdditionalProperties) {
		o.AdditionalProperties = map[string]interface{}{}
	}
	o.AdditionalProperties["value"] = value
	return
}

type NullablePricelistChannelFilter struct {
	value *PricelistChannelFilter
	isSet bool
}

func (v NullablePricelistChannelFilter) Get() *PricelistChannelFilter {
	return v.value
}

func (v *NullablePricelistChannelFilter) Set(val *PricelistChannelFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePricelistChannelFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePricelistChannelFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePricelistChannelFilter(val *PricelistChannelFilter) *NullablePricelistChannelFilter {
	return &NullablePricelistChannelFilter{value: val, isSet: true}
}

func (v NullablePricelistChannelFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePricelistChannelFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
