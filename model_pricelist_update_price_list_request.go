/*
PriceList Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricelist

import (
	"encoding/json"
)

// checks if the PricelistUpdatePriceListRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PricelistUpdatePriceListRequest{}

// PricelistUpdatePriceListRequest struct for PricelistUpdatePriceListRequest
type PricelistUpdatePriceListRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	Id *string `json:"id,omitempty"`
	Payload *PricelistUpdatePriceListRequestPayload `json:"payload,omitempty"`
	PayloadMask *string `json:"payloadMask,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PricelistUpdatePriceListRequest PricelistUpdatePriceListRequest

// NewPricelistUpdatePriceListRequest instantiates a new PricelistUpdatePriceListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPricelistUpdatePriceListRequest() *PricelistUpdatePriceListRequest {
	this := PricelistUpdatePriceListRequest{}
	return &this
}

// NewPricelistUpdatePriceListRequestWithDefaults instantiates a new PricelistUpdatePriceListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPricelistUpdatePriceListRequestWithDefaults() *PricelistUpdatePriceListRequest {
	this := PricelistUpdatePriceListRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *PricelistUpdatePriceListRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistUpdatePriceListRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *PricelistUpdatePriceListRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *PricelistUpdatePriceListRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PricelistUpdatePriceListRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistUpdatePriceListRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PricelistUpdatePriceListRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PricelistUpdatePriceListRequest) SetId(v string) {
	o.Id = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *PricelistUpdatePriceListRequest) GetPayload() PricelistUpdatePriceListRequestPayload {
	if o == nil || IsNil(o.Payload) {
		var ret PricelistUpdatePriceListRequestPayload
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistUpdatePriceListRequest) GetPayloadOk() (*PricelistUpdatePriceListRequestPayload, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *PricelistUpdatePriceListRequest) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given PricelistUpdatePriceListRequestPayload and assigns it to the Payload field.
func (o *PricelistUpdatePriceListRequest) SetPayload(v PricelistUpdatePriceListRequestPayload) {
	o.Payload = &v
}

// GetPayloadMask returns the PayloadMask field value if set, zero value otherwise.
func (o *PricelistUpdatePriceListRequest) GetPayloadMask() string {
	if o == nil || IsNil(o.PayloadMask) {
		var ret string
		return ret
	}
	return *o.PayloadMask
}

// GetPayloadMaskOk returns a tuple with the PayloadMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistUpdatePriceListRequest) GetPayloadMaskOk() (*string, bool) {
	if o == nil || IsNil(o.PayloadMask) {
		return nil, false
	}
	return o.PayloadMask, true
}

// HasPayloadMask returns a boolean if a field has been set.
func (o *PricelistUpdatePriceListRequest) HasPayloadMask() bool {
	if o != nil && !IsNil(o.PayloadMask) {
		return true
	}

	return false
}

// SetPayloadMask gets a reference to the given string and assigns it to the PayloadMask field.
func (o *PricelistUpdatePriceListRequest) SetPayloadMask(v string) {
	o.PayloadMask = &v
}

func (o PricelistUpdatePriceListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PricelistUpdatePriceListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.PayloadMask) {
		toSerialize["payloadMask"] = o.PayloadMask
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PricelistUpdatePriceListRequest) UnmarshalJSON(data []byte) (err error) {
	varPricelistUpdatePriceListRequest := _PricelistUpdatePriceListRequest{}

	err = json.Unmarshal(data, &varPricelistUpdatePriceListRequest)

	if err != nil {
		return err
	}

	*o = PricelistUpdatePriceListRequest(varPricelistUpdatePriceListRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "id")
		delete(additionalProperties, "payload")
		delete(additionalProperties, "payloadMask")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PricelistUpdatePriceListRequest) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PricelistUpdatePriceListRequest) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePricelistUpdatePriceListRequest struct {
	value *PricelistUpdatePriceListRequest
	isSet bool
}

func (v NullablePricelistUpdatePriceListRequest) Get() *PricelistUpdatePriceListRequest {
	return v.value
}

func (v *NullablePricelistUpdatePriceListRequest) Set(val *PricelistUpdatePriceListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePricelistUpdatePriceListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePricelistUpdatePriceListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePricelistUpdatePriceListRequest(val *PricelistUpdatePriceListRequest) *NullablePricelistUpdatePriceListRequest {
	return &NullablePricelistUpdatePriceListRequest{value: val, isSet: true}
}

func (v NullablePricelistUpdatePriceListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePricelistUpdatePriceListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


