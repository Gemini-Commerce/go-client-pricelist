/*
PriceList Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricelist

import (
	"encoding/json"
	"time"
)

// checks if the PricelistGetFullPriceItemPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PricelistGetFullPriceItemPrice{}

// PricelistGetFullPriceItemPrice struct for PricelistGetFullPriceItemPrice
type PricelistGetFullPriceItemPrice struct {
	Price *PricelistMoney `json:"price,omitempty"`
	IsEnabled *bool `json:"isEnabled,omitempty"`
	StartAt *time.Time `json:"startAt,omitempty"`
	EndAt *time.Time `json:"endAt,omitempty"`
	Order *int64 `json:"order,omitempty"`
	BasePrice *PricelistMoney `json:"basePrice,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PricelistGetFullPriceItemPrice PricelistGetFullPriceItemPrice

// NewPricelistGetFullPriceItemPrice instantiates a new PricelistGetFullPriceItemPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPricelistGetFullPriceItemPrice() *PricelistGetFullPriceItemPrice {
	this := PricelistGetFullPriceItemPrice{}
	return &this
}

// NewPricelistGetFullPriceItemPriceWithDefaults instantiates a new PricelistGetFullPriceItemPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPricelistGetFullPriceItemPriceWithDefaults() *PricelistGetFullPriceItemPrice {
	this := PricelistGetFullPriceItemPrice{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItemPrice) GetPrice() PricelistMoney {
	if o == nil || IsNil(o.Price) {
		var ret PricelistMoney
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItemPrice) GetPriceOk() (*PricelistMoney, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// &#39;Has&#39;Price returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItemPrice) &#39;Has&#39;Price() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given PricelistMoney and assigns it to the Price field.
func (o *PricelistGetFullPriceItemPrice) SetPrice(v PricelistMoney) {
	o.Price = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItemPrice) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItemPrice) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// &#39;Has&#39;IsEnabled returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItemPrice) &#39;Has&#39;IsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *PricelistGetFullPriceItemPrice) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItemPrice) GetStartAt() time.Time {
	if o == nil || IsNil(o.StartAt) {
		var ret time.Time
		return ret
	}
	return *o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItemPrice) GetStartAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartAt) {
		return nil, false
	}
	return o.StartAt, true
}

// &#39;Has&#39;StartAt returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItemPrice) &#39;Has&#39;StartAt() bool {
	if o != nil && !IsNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given time.Time and assigns it to the StartAt field.
func (o *PricelistGetFullPriceItemPrice) SetStartAt(v time.Time) {
	o.StartAt = &v
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItemPrice) GetEndAt() time.Time {
	if o == nil || IsNil(o.EndAt) {
		var ret time.Time
		return ret
	}
	return *o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItemPrice) GetEndAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndAt) {
		return nil, false
	}
	return o.EndAt, true
}

// &#39;Has&#39;EndAt returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItemPrice) &#39;Has&#39;EndAt() bool {
	if o != nil && !IsNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given time.Time and assigns it to the EndAt field.
func (o *PricelistGetFullPriceItemPrice) SetEndAt(v time.Time) {
	o.EndAt = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItemPrice) GetOrder() int64 {
	if o == nil || IsNil(o.Order) {
		var ret int64
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItemPrice) GetOrderOk() (*int64, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// &#39;Has&#39;Order returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItemPrice) &#39;Has&#39;Order() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int64 and assigns it to the Order field.
func (o *PricelistGetFullPriceItemPrice) SetOrder(v int64) {
	o.Order = &v
}

// GetBasePrice returns the BasePrice field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItemPrice) GetBasePrice() PricelistMoney {
	if o == nil || IsNil(o.BasePrice) {
		var ret PricelistMoney
		return ret
	}
	return *o.BasePrice
}

// GetBasePriceOk returns a tuple with the BasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItemPrice) GetBasePriceOk() (*PricelistMoney, bool) {
	if o == nil || IsNil(o.BasePrice) {
		return nil, false
	}
	return o.BasePrice, true
}

// &#39;Has&#39;BasePrice returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItemPrice) &#39;Has&#39;BasePrice() bool {
	if o != nil && !IsNil(o.BasePrice) {
		return true
	}

	return false
}

// SetBasePrice gets a reference to the given PricelistMoney and assigns it to the BasePrice field.
func (o *PricelistGetFullPriceItemPrice) SetBasePrice(v PricelistMoney) {
	o.BasePrice = &v
}

func (o PricelistGetFullPriceItemPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PricelistGetFullPriceItemPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !IsNil(o.StartAt) {
		toSerialize["startAt"] = o.StartAt
	}
	if !IsNil(o.EndAt) {
		toSerialize["endAt"] = o.EndAt
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.BasePrice) {
		toSerialize["basePrice"] = o.BasePrice
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PricelistGetFullPriceItemPrice) UnmarshalJSON(data []byte) (err error) {
	varPricelistGetFullPriceItemPrice := _PricelistGetFullPriceItemPrice{}

	err = json.Unmarshal(data, &varPricelistGetFullPriceItemPrice)

	if err != nil {
		return err
	}

	*o = PricelistGetFullPriceItemPrice(varPricelistGetFullPriceItemPrice)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "price")
		delete(additionalProperties, "isEnabled")
		delete(additionalProperties, "startAt")
		delete(additionalProperties, "endAt")
		delete(additionalProperties, "order")
		delete(additionalProperties, "basePrice")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PricelistGetFullPriceItemPrice) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PricelistGetFullPriceItemPrice) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePricelistGetFullPriceItemPrice struct {
	value *PricelistGetFullPriceItemPrice
	isSet bool
}

func (v NullablePricelistGetFullPriceItemPrice) Get() *PricelistGetFullPriceItemPrice {
	return v.value
}

func (v *NullablePricelistGetFullPriceItemPrice) Set(val *PricelistGetFullPriceItemPrice) {
	v.value = val
	v.isSet = true
}

func (v NullablePricelistGetFullPriceItemPrice) IsSet() bool {
	return v.isSet
}

func (v *NullablePricelistGetFullPriceItemPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePricelistGetFullPriceItemPrice(val *PricelistGetFullPriceItemPrice) *NullablePricelistGetFullPriceItemPrice {
	return &NullablePricelistGetFullPriceItemPrice{value: val, isSet: true}
}

func (v NullablePricelistGetFullPriceItemPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePricelistGetFullPriceItemPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


