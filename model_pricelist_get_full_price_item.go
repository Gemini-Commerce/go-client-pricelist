/*
PriceList Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pricelist

import (
	"encoding/json"
	"time"
)

// checks if the PricelistGetFullPriceItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PricelistGetFullPriceItem{}

// PricelistGetFullPriceItem struct for PricelistGetFullPriceItem
type PricelistGetFullPriceItem struct {
	Id *string `json:"id,omitempty"`
	Grn *string `json:"grn,omitempty"`
	ItemGrn *string `json:"itemGrn,omitempty"`
	BasePrice *PricelistMoney `json:"basePrice,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Currency *PricelistCurrency `json:"currency,omitempty"`
	Prices []PricelistGetFullPriceItemPrice `json:"prices,omitempty"`
	HasTierPrices *bool `json:"hasTierPrices,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PricelistGetFullPriceItem PricelistGetFullPriceItem

// NewPricelistGetFullPriceItem instantiates a new PricelistGetFullPriceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPricelistGetFullPriceItem() *PricelistGetFullPriceItem {
	this := PricelistGetFullPriceItem{}
	var currency PricelistCurrency = PRICELISTCURRENCY_XXX
	this.Currency = &currency
	return &this
}

// NewPricelistGetFullPriceItemWithDefaults instantiates a new PricelistGetFullPriceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPricelistGetFullPriceItemWithDefaults() *PricelistGetFullPriceItem {
	this := PricelistGetFullPriceItem{}
	var currency PricelistCurrency = PRICELISTCURRENCY_XXX
	this.Currency = &currency
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PricelistGetFullPriceItem) SetId(v string) {
	o.Id = &v
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetGrn() string {
	if o == nil || IsNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetGrnOk() (*string, bool) {
	if o == nil || IsNil(o.Grn) {
		return nil, false
	}
	return o.Grn, true
}

// HasGrn returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasGrn() bool {
	if o != nil && !IsNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *PricelistGetFullPriceItem) SetGrn(v string) {
	o.Grn = &v
}

// GetItemGrn returns the ItemGrn field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetItemGrn() string {
	if o == nil || IsNil(o.ItemGrn) {
		var ret string
		return ret
	}
	return *o.ItemGrn
}

// GetItemGrnOk returns a tuple with the ItemGrn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetItemGrnOk() (*string, bool) {
	if o == nil || IsNil(o.ItemGrn) {
		return nil, false
	}
	return o.ItemGrn, true
}

// HasItemGrn returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasItemGrn() bool {
	if o != nil && !IsNil(o.ItemGrn) {
		return true
	}

	return false
}

// SetItemGrn gets a reference to the given string and assigns it to the ItemGrn field.
func (o *PricelistGetFullPriceItem) SetItemGrn(v string) {
	o.ItemGrn = &v
}

// GetBasePrice returns the BasePrice field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetBasePrice() PricelistMoney {
	if o == nil || IsNil(o.BasePrice) {
		var ret PricelistMoney
		return ret
	}
	return *o.BasePrice
}

// GetBasePriceOk returns a tuple with the BasePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetBasePriceOk() (*PricelistMoney, bool) {
	if o == nil || IsNil(o.BasePrice) {
		return nil, false
	}
	return o.BasePrice, true
}

// HasBasePrice returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasBasePrice() bool {
	if o != nil && !IsNil(o.BasePrice) {
		return true
	}

	return false
}

// SetBasePrice gets a reference to the given PricelistMoney and assigns it to the BasePrice field.
func (o *PricelistGetFullPriceItem) SetBasePrice(v PricelistMoney) {
	o.BasePrice = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PricelistGetFullPriceItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PricelistGetFullPriceItem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetCurrency() PricelistCurrency {
	if o == nil || IsNil(o.Currency) {
		var ret PricelistCurrency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetCurrencyOk() (*PricelistCurrency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given PricelistCurrency and assigns it to the Currency field.
func (o *PricelistGetFullPriceItem) SetCurrency(v PricelistCurrency) {
	o.Currency = &v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetPrices() []PricelistGetFullPriceItemPrice {
	if o == nil || IsNil(o.Prices) {
		var ret []PricelistGetFullPriceItemPrice
		return ret
	}
	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetPricesOk() ([]PricelistGetFullPriceItemPrice, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given []PricelistGetFullPriceItemPrice and assigns it to the Prices field.
func (o *PricelistGetFullPriceItem) SetPrices(v []PricelistGetFullPriceItemPrice) {
	o.Prices = v
}

// GetHasTierPrices returns the HasTierPrices field value if set, zero value otherwise.
func (o *PricelistGetFullPriceItem) GetHasTierPrices() bool {
	if o == nil || IsNil(o.HasTierPrices) {
		var ret bool
		return ret
	}
	return *o.HasTierPrices
}

// GetHasTierPricesOk returns a tuple with the HasTierPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PricelistGetFullPriceItem) GetHasTierPricesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasTierPrices) {
		return nil, false
	}
	return o.HasTierPrices, true
}

// HasHasTierPrices returns a boolean if a field has been set.
func (o *PricelistGetFullPriceItem) HasHasTierPrices() bool {
	if o != nil && !IsNil(o.HasTierPrices) {
		return true
	}

	return false
}

// SetHasTierPrices gets a reference to the given bool and assigns it to the HasTierPrices field.
func (o *PricelistGetFullPriceItem) SetHasTierPrices(v bool) {
	o.HasTierPrices = &v
}

func (o PricelistGetFullPriceItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PricelistGetFullPriceItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	if !IsNil(o.ItemGrn) {
		toSerialize["itemGrn"] = o.ItemGrn
	}
	if !IsNil(o.BasePrice) {
		toSerialize["basePrice"] = o.BasePrice
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	if !IsNil(o.HasTierPrices) {
		toSerialize["hasTierPrices"] = o.HasTierPrices
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PricelistGetFullPriceItem) UnmarshalJSON(data []byte) (err error) {
	varPricelistGetFullPriceItem := _PricelistGetFullPriceItem{}

	err = json.Unmarshal(data, &varPricelistGetFullPriceItem)

	if err != nil {
		return err
	}

	*o = PricelistGetFullPriceItem(varPricelistGetFullPriceItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "grn")
		delete(additionalProperties, "itemGrn")
		delete(additionalProperties, "basePrice")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "prices")
		delete(additionalProperties, "hasTierPrices")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *PricelistGetFullPriceItem) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *PricelistGetFullPriceItem) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullablePricelistGetFullPriceItem struct {
	value *PricelistGetFullPriceItem
	isSet bool
}

func (v NullablePricelistGetFullPriceItem) Get() *PricelistGetFullPriceItem {
	return v.value
}

func (v *NullablePricelistGetFullPriceItem) Set(val *PricelistGetFullPriceItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePricelistGetFullPriceItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePricelistGetFullPriceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePricelistGetFullPriceItem(val *PricelistGetFullPriceItem) *NullablePricelistGetFullPriceItem {
	return &NullablePricelistGetFullPriceItem{value: val, isSet: true}
}

func (v NullablePricelistGetFullPriceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePricelistGetFullPriceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


